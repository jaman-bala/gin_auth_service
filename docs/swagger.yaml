definitions:
  dto.AuditLogResponse:
    properties:
      action:
        type: string
      client_ip:
        type: string
      created_at:
        type: string
      description:
        description: Описание действия на русском
        type: string
      entity:
        type: string
      entity_id:
        type: string
      id:
        type: integer
      status:
        type: integer
      user_agent:
        type: string
      user_id:
        type: string
    type: object
  dto.LoginRequestDTO:
    properties:
      password:
        example: Password123
        minLength: 8
        type: string
      phone:
        example: "+996500500500"
        type: string
    required:
    - password
    - phone
    type: object
  dto.RefreshTokenRequest:
    properties:
      refresh_token:
        example: refresh_token
        type: string
    type: object
  dto.UserResponseDTO:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      first_name:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      last_name:
        type: string
      middle_name:
        type: string
      phone:
        type: string
      photo:
        type: string
      role:
        type: string
      updated_at:
        type: string
    type: object
  dto.UserWebDTO:
    properties:
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      middle_name:
        type: string
      phone:
        type: string
      photo:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for managing users and authentication in the Auth Service application.
  title: AUTH SERVICE API
  version: "1.0"
paths:
  /api/v1/audit:
    get:
      description: Возвращает список действий пользователей
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.AuditLogResponse'
            type: array
      security:
      - BearerAuth: []
      summary: Получить все действия пользователей
      tags:
      - audit
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Аутентифицирует пользователя и возвращает JWT токен
      parameters:
      - description: Учетные данные
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequestDTO'
      produces:
      - application/json
      responses: {}
      summary: Вход в систему
      tags:
      - auth
  /api/v1/auth/logout:
    post:
      description: Завершает сессию пользователя. На сервере токен не сохраняется,
        поэтому выход обрабатывается на клиенте (удаление токена).
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Выход из системы
      tags:
      - auth
  /api/v1/auth/me:
    get:
      description: Данные авторизованного пользователя
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Данные профиля
      tags:
      - auth
  /api/v1/auth/refresh:
    post:
      consumes:
      - application/json
      description: Получить новый access токен, отправив refresh token
      parameters:
      - description: Тело запроса с refresh token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RefreshTokenRequest'
      produces:
      - application/json
      responses: {}
      summary: Обновление access токена по refresh token
      tags:
      - auth
  /api/v1/auth/web-register:
    post:
      consumes:
      - multipart/form-data
      description: Регистрирует нового пользователя в системе с возможностью загрузки
        фото
      parameters:
      - description: Имя
        in: formData
        name: first_name
        required: true
        type: string
      - description: Фамилия
        in: formData
        name: last_name
        required: true
        type: string
      - description: Отчество
        in: formData
        name: middle_name
        type: string
      - description: Пароль
        in: formData
        name: password
        required: true
        type: string
      - description: Телефон
        in: formData
        name: phone
        required: true
        type: string
      - description: Фото профиля
        in: formData
        name: photo
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.UserWebDTO'
      security:
      - BearerAuth: []
      summary: Регистрация нового пользователя
      tags:
      - auth
  /api/v1/dashboard:
    get:
      description: Возвращает список всех зарегистрированных пользователей (только
        для авторизованных пользователей)
      produces:
      - application/json
      responses:
        "200":
          description: Список пользователей
          schema:
            items:
              $ref: '#/definitions/dto.UserResponseDTO'
            type: array
        "401":
          description: Пользователь не авторизован
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получение всех пользователей
      tags:
      - dashboard
  /api/v1/dashboard/{id}:
    get:
      description: Возвращает информацию о пользователе по указанному ID
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Получение пользователя по ID
      tags:
      - dashboard
  /api/v1/dashboard/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Удаляет пользователя по указанному ID
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Пользователь успешно удален
      security:
      - BearerAuth: []
      summary: Удаление пользователя
      tags:
      - dashboard
  /api/v1/dashboard/patch/{id}:
    patch:
      consumes:
      - multipart/form-data
      description: Обновляет информацию о пользователе с возможностью загрузки фото.
        Можно передавать только те поля, которые нужно изменить (PATCH).
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: string
      - description: Имя
        in: formData
        name: first_name
        type: string
      - description: Фамилия
        in: formData
        name: last_name
        type: string
      - description: Отчество
        in: formData
        name: middle_name
        type: string
      - description: Телефон
        in: formData
        name: phone
        type: string
      - description: Роль
        in: formData
        name: role
        type: string
      - description: Активен
        in: formData
        name: is_active
        type: boolean
      - description: Фото профиля
        in: formData
        name: photo
        type: file
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Обновление пользователя
      tags:
      - dashboard
  /api/v1/dashboard/phone/{phone}:
    get:
      description: Возвращает информацию о пользователе по номеру телефона
      parameters:
      - description: Номер телефона пользователя
        example: '"+996500500500"'
        in: path
        name: phone
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Информация о пользователе
          schema:
            $ref: '#/definitions/dto.UserResponseDTO'
      security:
      - BearerAuth: []
      summary: Получить пользователя по номеру телефона
      tags:
      - dashboard
  /api/v1/dashboard/register:
    post:
      consumes:
      - multipart/form-data
      description: Регистрирует нового пользователя в системе
      parameters:
      - description: Имя
        in: formData
        name: first_name
        required: true
        type: string
      - description: Фамилия
        in: formData
        name: last_name
        required: true
        type: string
      - description: Отчество
        in: formData
        name: middle_name
        type: string
      - description: Пароль
        in: formData
        name: password
        required: true
        type: string
      - description: Телефон
        in: formData
        name: phone
        required: true
        type: string
      - description: Роль
        in: formData
        name: role
        type: string
      - description: Фото профиля
        in: formData
        name: photo
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.UserResponseDTO'
      security:
      - BearerAuth: []
      summary: Регистрация нового пользователя
      tags:
      - dashboard
swagger: "2.0"
